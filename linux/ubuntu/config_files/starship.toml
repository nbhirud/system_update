# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

# Replace the '❯' symbol in the prompt with '➜'
#[character] # The name of the module we are configuring is 'character'
#success_symbol = '[➜](bold green)' # The 'success_symbol' segment is being set to '➜' with the color 'bold green'

# Disable the package module, hiding it from the prompt completely
#[package]
#disabled = true


# AWS
[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
style = 'bold blue'
symbol = "  "
#[aws.region_aliases]
#ap-southeast-2 = 'au'
#us-east-1 = 'va'
#[aws.profile_aliases]
#CompanyGroupFrobozzOnCallAccess = 'Frobozz'

# Battery
[battery]
full_symbol = '🔋 '
charging_symbol = '⚡️ '
discharging_symbol = '💀 '

[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%
threshold = 10
style = 'bold red'

[[battery.display]] # 'bold yellow' style and 💦 symbol when capacity is between 10% and 30%
threshold = 30
style = 'bold yellow'
discharging_symbol = '💦 '
# when capacity is over 30%, the battery indicator will not be displayed

# C
[c]
symbol = " "
format = 'via [$name $version]($style)'

# Character
[character]
success_symbol = '[➜](bold green) '
#error_symbol = '[✗](bold red) '
error_symbol = '[➜](bold red) '
vimcmd_symbol = '[V](bold green) '


# Command Duration 
[cmd_duration]
min_time = 500
format = 'underwent [$duration](bold yellow)'

# Conda
[conda]
symbol = " "
format = '[$symbol$environment](dimmed green) '

# Container
[container]
format = '[$symbol \[$name\]]($style) '

# Directory
[directory]
read_only = " 󰌾"
truncation_length = 8
truncation_symbol = '…/'

# Direnv
[direnv]
disabled = false

# Docker Context 
[docker_context]
symbol = " "
format = 'via [🐋 $context](blue bold)'

# Environment Variable 
[env_var.SHELL]
variable = 'SHELL'
default = 'unknown shell'
[env_var.USER]
default = 'unknown user'

# Git Branch 
[git_branch]
symbol = " "
truncation_length = 15
truncation_symbol = ''
ignore_branches = ['master', 'main']

# Git Commit 
[git_commit]
commit_hash_length = 15
tag_symbol = '🔖 '

# Git State 
[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = '[🍒 PICKING](bold red)'

# Git Metrics 
[git_metrics]
added_style = 'bold blue'
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '
disabled = false

# Git Status 
# ~/.config/starship.toml

[git_status]
conflicted = '🏳'
ahead = '🏎💨'
behind = '😰'
diverged = '😵'
up_to_date = '✓'
untracked = '🤷'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](green)'
renamed = '👅'
deleted = '🗑'
#ahead = '⇡${count}'
#diverged = '⇕⇡${ahead_count}⇣${behind_count}'
#behind = '⇣${count}'

# Go
[golang]
symbol = " "
format = 'via [$symbol($version )($mod_version )]($style)'

# Helm
[helm]
format = 'via [⎈ $version](bold white) '


# Hostname
[hostname]
ssh_symbol = " "
ssh_only = false
format = '[$ssh_symbol](bold blue) on [$hostname](bold red) '
trim_at = '.companyname.com'
disabled = false

# Java
[java]
#symbol = '🌟 '
symbol = " "

# Jobs
[jobs]
symbol = '+ '
number_threshold = 4
symbol_threshold = 0

# Kubernetes
[kubernetes]
format = 'on [⛵ ($user on )($cluster in )$context \($namespace\)](dimmed green) '
disabled = false
contexts = [
  { context_pattern = "dev.local.cluster.k8s", style = "green", symbol = "💔 " },
]
## Kubernetes Context specific config
#
#[[kubernetes.contexts]]
## "bold red" style + default symbol when Kubernetes current context name equals "production" *and* the current user
## equals "admin_user"
#context_pattern = "production"
#user_pattern = "admin_user"
#style = "bold red"
#context_alias = "prod"
#user_alias = "admin"
#
#[[kubernetes.contexts]]
## "green" style + a different symbol when Kubernetes current context name contains openshift
#context_pattern = ".*openshift.*"
#style = "green"
#symbol = "💔 "
#context_alias = "openshift"
#
#[[kubernetes.contexts]]
## Using capture groups
## Contexts from GKE, AWS and other cloud providers usually carry additional information, like the region/zone.
## The following entry matches on the GKE format (`gke_projectname_zone_cluster-name`)
## and renames every matching kube context into a more readable format (`gke-cluster-name`):
#context_pattern = "gke_.*_(?P<cluster>[\\w-]+)"
#context_alias = "gke-$cluster"

# Local IP
[localip]
ssh_only = false
format = '@[$localipv4](bold red) '
disabled = false

# Memory Usage
[memory_usage]
symbol = "󰍛 "
disabled = false
threshold = -1
#symbol = ' '
style = 'bold dimmed green'


# OS
# This is the default symbols table.
[os.symbols]
Ubuntu = " "

[os]
format = "on [($name )]($style)"
style = "bold blue"
disabled = false
#[os.symbols]
#Windows = " "
#Arch = "Arch is the best! "

# Package Version
[package]
symbol = "󰏗 "
format = 'via [🎁 $version](208 bold) '

# Python
[python]
#symbol = '👾 '
symbol = " "
pyenv_version_name = true
# Only use the `python3` binary to get the version.
python_binary = 'python3'
# Don't trigger for files with the py extension
detect_extensions = []

# Rust
[rust]
symbol = " "
format = 'via [⚙️ $version](red bold)'

# Shell
[shell]
fish_indicator = '󰈺 '
powershell_indicator = '_'
unknown_indicator = 'mystery shell'
style = 'cyan bold'
disabled = false

# Status
[status]
style = 'bg:blue'
symbol = '🔴 '
success_symbol = '🟢 SUCCESS'
format = '[\[$symbol$common_meaning$signal_name$maybe_int\]]($style) '
map_symbol = true
disabled = false

# Sudo
[sudo]
style = 'bold green'
symbol = '👩‍💻 '
disabled = false

# Terraform
[terraform]
format = '[🏎💨 $version$workspace]($style) '

# Time
[time]
disabled = false
format = '🕙[\[ $time \]]($style) '
time_format = '%T'
utc_time_offset = '-5'
time_range = '10:00:00-14:00:00'

# Username
[username]
style_user = 'white bold'
style_root = 'black bold'
format = 'user: [$user]($style) '
disabled = false
show_always = true

